//
// File generated by rootcint at Fri Aug 15 23:20:14 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME LibHistoManagerDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "LibHistoManagerDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void HistoManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HistoManager(void *p = 0);
   static void *newArray_HistoManager(Long_t size, void *p);
   static void delete_HistoManager(void *p);
   static void deleteArray_HistoManager(void *p);
   static void destruct_HistoManager(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HistoManager*)
   {
      ::HistoManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HistoManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HistoManager", ::HistoManager::Class_Version(), "./HistoManager.h", 97,
                  typeid(::HistoManager), DefineBehavior(ptr, ptr),
                  &::HistoManager::Dictionary, isa_proxy, 4,
                  sizeof(::HistoManager) );
      instance.SetNew(&new_HistoManager);
      instance.SetNewArray(&newArray_HistoManager);
      instance.SetDelete(&delete_HistoManager);
      instance.SetDeleteArray(&deleteArray_HistoManager);
      instance.SetDestructor(&destruct_HistoManager);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HistoManager*)
   {
      return GenerateInitInstanceLocal((::HistoManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HistoManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
atomic_TClass_ptr HistoManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HistoManager::Class_Name()
{
   return "HistoManager";
}

//______________________________________________________________________________
const char *HistoManager::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HistoManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HistoManager::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HistoManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HistoManager::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HistoManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HistoManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HistoManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void HistoManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class HistoManager.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HistoManager::Class(),this);
   } else {
      R__b.WriteClassBuffer(HistoManager::Class(),this);
   }
}

//______________________________________________________________________________
void HistoManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HistoManager.
      TClass *R__cl = ::HistoManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_histoTH1F", (void*)&m_histoTH1F);
      R__insp.InspectMember("vector<HistDefTH1F>", (void*)&m_histoTH1F, "m_histoTH1F.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_histoTH2F", (void*)&m_histoTH2F);
      R__insp.InspectMember("vector<HistDefTH2F>", (void*)&m_histoTH2F, "m_histoTH2F.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_histoTProf", (void*)&m_histoTProf);
      R__insp.InspectMember("vector<HistDefTProf>", (void*)&m_histoTProf, "m_histoTProf.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_histoTH3F", (void*)&m_histoTH3F);
      R__insp.InspectMember("vector<HistDefTH2F>", (void*)&m_histoTH3F, "m_histoTH3F.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_TH1FArray", &m_TH1FArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_TH2FArray", &m_TH2FArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_TProfArray", &m_TProfArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_TH3FArray", &m_TH3FArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "th1fSize", &th1fSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "th2fSize", &th2fSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "th3fSize", &th3fSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tprofSize", &tprofSize);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HistoManager(void *p) {
      return  p ? new(p) ::HistoManager : new ::HistoManager;
   }
   static void *newArray_HistoManager(Long_t nElements, void *p) {
      return p ? new(p) ::HistoManager[nElements] : new ::HistoManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_HistoManager(void *p) {
      delete ((::HistoManager*)p);
   }
   static void deleteArray_HistoManager(void *p) {
      delete [] ((::HistoManager*)p);
   }
   static void destruct_HistoManager(void *p) {
      typedef ::HistoManager current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HistoManager

namespace ROOT {
   void vectorlEHistDefTH1FgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHistDefTH1FgR_Dictionary();
   static void *new_vectorlEHistDefTH1FgR(void *p = 0);
   static void *newArray_vectorlEHistDefTH1FgR(Long_t size, void *p);
   static void delete_vectorlEHistDefTH1FgR(void *p);
   static void deleteArray_vectorlEHistDefTH1FgR(void *p);
   static void destruct_vectorlEHistDefTH1FgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HistDefTH1F>*)
   {
      vector<HistDefTH1F> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HistDefTH1F>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HistDefTH1F>", -2, "prec_stl/vector", 49,
                  typeid(vector<HistDefTH1F>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHistDefTH1FgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<HistDefTH1F>) );
      instance.SetNew(&new_vectorlEHistDefTH1FgR);
      instance.SetNewArray(&newArray_vectorlEHistDefTH1FgR);
      instance.SetDelete(&delete_vectorlEHistDefTH1FgR);
      instance.SetDeleteArray(&deleteArray_vectorlEHistDefTH1FgR);
      instance.SetDestructor(&destruct_vectorlEHistDefTH1FgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HistDefTH1F> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HistDefTH1F>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHistDefTH1FgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HistDefTH1F>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHistDefTH1FgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HistDefTH1F> : new vector<HistDefTH1F>;
   }
   static void *newArray_vectorlEHistDefTH1FgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HistDefTH1F>[nElements] : new vector<HistDefTH1F>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHistDefTH1FgR(void *p) {
      delete ((vector<HistDefTH1F>*)p);
   }
   static void deleteArray_vectorlEHistDefTH1FgR(void *p) {
      delete [] ((vector<HistDefTH1F>*)p);
   }
   static void destruct_vectorlEHistDefTH1FgR(void *p) {
      typedef vector<HistDefTH1F> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HistDefTH1F>

namespace ROOT {
   void vectorlEHistDefTH2FgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHistDefTH2FgR_Dictionary();
   static void *new_vectorlEHistDefTH2FgR(void *p = 0);
   static void *newArray_vectorlEHistDefTH2FgR(Long_t size, void *p);
   static void delete_vectorlEHistDefTH2FgR(void *p);
   static void deleteArray_vectorlEHistDefTH2FgR(void *p);
   static void destruct_vectorlEHistDefTH2FgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HistDefTH2F>*)
   {
      vector<HistDefTH2F> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HistDefTH2F>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HistDefTH2F>", -2, "prec_stl/vector", 49,
                  typeid(vector<HistDefTH2F>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHistDefTH2FgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<HistDefTH2F>) );
      instance.SetNew(&new_vectorlEHistDefTH2FgR);
      instance.SetNewArray(&newArray_vectorlEHistDefTH2FgR);
      instance.SetDelete(&delete_vectorlEHistDefTH2FgR);
      instance.SetDeleteArray(&deleteArray_vectorlEHistDefTH2FgR);
      instance.SetDestructor(&destruct_vectorlEHistDefTH2FgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HistDefTH2F> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HistDefTH2F>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHistDefTH2FgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HistDefTH2F>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHistDefTH2FgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HistDefTH2F> : new vector<HistDefTH2F>;
   }
   static void *newArray_vectorlEHistDefTH2FgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HistDefTH2F>[nElements] : new vector<HistDefTH2F>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHistDefTH2FgR(void *p) {
      delete ((vector<HistDefTH2F>*)p);
   }
   static void deleteArray_vectorlEHistDefTH2FgR(void *p) {
      delete [] ((vector<HistDefTH2F>*)p);
   }
   static void destruct_vectorlEHistDefTH2FgR(void *p) {
      typedef vector<HistDefTH2F> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HistDefTH2F>

namespace ROOT {
   void vectorlEHistDefTProfgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEHistDefTProfgR_Dictionary();
   static void *new_vectorlEHistDefTProfgR(void *p = 0);
   static void *newArray_vectorlEHistDefTProfgR(Long_t size, void *p);
   static void delete_vectorlEHistDefTProfgR(void *p);
   static void deleteArray_vectorlEHistDefTProfgR(void *p);
   static void destruct_vectorlEHistDefTProfgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<HistDefTProf>*)
   {
      vector<HistDefTProf> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<HistDefTProf>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<HistDefTProf>", -2, "prec_stl/vector", 49,
                  typeid(vector<HistDefTProf>), DefineBehavior(ptr, ptr),
                  0, &vectorlEHistDefTProfgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<HistDefTProf>) );
      instance.SetNew(&new_vectorlEHistDefTProfgR);
      instance.SetNewArray(&newArray_vectorlEHistDefTProfgR);
      instance.SetDelete(&delete_vectorlEHistDefTProfgR);
      instance.SetDeleteArray(&deleteArray_vectorlEHistDefTProfgR);
      instance.SetDestructor(&destruct_vectorlEHistDefTProfgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<HistDefTProf> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<HistDefTProf>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEHistDefTProfgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<HistDefTProf>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEHistDefTProfgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HistDefTProf> : new vector<HistDefTProf>;
   }
   static void *newArray_vectorlEHistDefTProfgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<HistDefTProf>[nElements] : new vector<HistDefTProf>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEHistDefTProfgR(void *p) {
      delete ((vector<HistDefTProf>*)p);
   }
   static void deleteArray_vectorlEHistDefTProfgR(void *p) {
      delete [] ((vector<HistDefTProf>*)p);
   }
   static void destruct_vectorlEHistDefTProfgR(void *p) {
      typedef vector<HistDefTProf> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<HistDefTProf>

/********************************************************
* LibHistoManagerDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableLibHistoManagerDict();

extern "C" void G__set_cpp_environmentLibHistoManagerDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("HistoManager.h");
  G__cpp_reset_tagtableLibHistoManagerDict();
}
#include <new>
extern "C" int G__cpp_dllrevLibHistoManagerDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HistoManager */
static int G__LibHistoManagerDict_590_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HistoManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HistoManager[n];
     } else {
       p = new((void*) gvp) HistoManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HistoManager;
     } else {
       p = new((void*) gvp) HistoManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LibHistoManagerDictLN_HistoManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HistoManager::getInstance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistoManager*) G__getstructoffset())->CreateHistTables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistoManager*) G__getstructoffset())->StoreHistos();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HistoManager*) G__getstructoffset())->GetHistoTH1F((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HistoManager*) G__getstructoffset())->GetHistoTH2F((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HistoManager*) G__getstructoffset())->GetHistoTH3F((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HistoManager*) G__getstructoffset())->GetHistoTProf((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistoManager*) G__getstructoffset())->addTH1F((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistoManager*) G__getstructoffset())->addTH1F((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistoManager*) G__getstructoffset())->addTH2F(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((HistoManager*) G__getstructoffset())->addTProf(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((HistoManager*) G__getstructoffset())->addTProf((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((HistoManager*) G__getstructoffset())->addTProf((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistoManager*) G__getstructoffset())->addTH2F((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double*) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistoManager*) G__getstructoffset())->addTH3F(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (int) G__int(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7])
, (int) G__int(libp->para[8]), (float) G__double(libp->para[9])
, (float) G__double(libp->para[10]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistoManager*) G__getstructoffset())->addTH3F(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (int) G__int(libp->para[6]), (double*) G__int(libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HistoManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HistoManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HistoManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HistoManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HistoManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HistoManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HistoManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HistoManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__LibHistoManagerDict_590_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HistoManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__LibHistoManagerDict_590_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HistoManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HistoManager(*(HistoManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__LibHistoManagerDictLN_HistoManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HistoManager G__THistoManager;
static int G__LibHistoManagerDict_590_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HistoManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HistoManager*) (soff+(sizeof(HistoManager)*i)))->~G__THistoManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HistoManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HistoManager*) (soff))->~G__THistoManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__LibHistoManagerDict_590_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HistoManager* dest = (HistoManager*) G__getstructoffset();
   *dest = *(HistoManager*) libp->para[0].ref;
   const HistoManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HistoManager */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncLibHistoManagerDict {
 public:
  G__Sizep2memfuncLibHistoManagerDict(): p(&G__Sizep2memfuncLibHistoManagerDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncLibHistoManagerDict::*p)();
};

size_t G__get_sizep2memfuncLibHistoManagerDict()
{
  G__Sizep2memfuncLibHistoManagerDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceLibHistoManagerDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__LibHistoManagerDictLN_HistoManager))) {
     HistoManager *G__Lderived;
     G__Lderived=(HistoManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__LibHistoManagerDictLN_HistoManager),G__get_linked_tagnum(&G__LibHistoManagerDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableLibHistoManagerDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HistDefTH1F>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEHistDefTH1FcOallocatorlEHistDefTH1FgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTH1FcOallocatorlEHistDefTH1FgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEHistDefTH1FcOallocatorlEHistDefTH1FgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTH1FcOallocatorlEHistDefTH1FgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEHistDefTH1FcOallocatorlEHistDefTH1FgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HistDefTH2F>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEHistDefTH2FcOallocatorlEHistDefTH2FgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTH2FcOallocatorlEHistDefTH2FgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEHistDefTH2FcOallocatorlEHistDefTH2FgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTH2FcOallocatorlEHistDefTH2FgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEHistDefTH2FcOallocatorlEHistDefTH2FgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HistDefTProf>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEHistDefTProfcOallocatorlEHistDefTProfgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTProfcOallocatorlEHistDefTProfgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEHistDefTProfcOallocatorlEHistDefTProfgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTProfcOallocatorlEHistDefTProfgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEHistDefTProfcOallocatorlEHistDefTProfgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HistoManager */
static void G__setup_memvarHistoManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__LibHistoManagerDictLN_HistoManager));
   { HistoManager *p; p=(HistoManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_HistoManager),-1,-2,4,"gHstMan=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEHistDefTH1FcOallocatorlEHistDefTH1FgRsPgR),G__defined_typename("vector<HistDefTH1F>"),-1,4,"m_histoTH1F=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEHistDefTH2FcOallocatorlEHistDefTH2FgRsPgR),G__defined_typename("vector<HistDefTH2F>"),-1,4,"m_histoTH2F=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEHistDefTProfcOallocatorlEHistDefTProfgRsPgR),G__defined_typename("vector<HistDefTProf>"),-1,4,"m_histoTProf=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_vectorlEHistDefTH2FcOallocatorlEHistDefTH2FgRsPgR),G__defined_typename("vector<HistDefTH2F>"),-1,4,"m_histoTH3F=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_TClonesArray),-1,-1,4,"m_TH1FArray=",0,"!< list of histograms TH1F;");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_TClonesArray),-1,-1,4,"m_TH2FArray=",0,"!< list of histograms TH2F;");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_TClonesArray),-1,-1,4,"m_TProfArray=",0,"!< list of histograms TProf;");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_TClonesArray),-1,-1,4,"m_TH3FArray=",0,"!< list of histograms TH3F;");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"th1fSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"th2fSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"th3fSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"tprofSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__LibHistoManagerDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarLibHistoManagerDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHistoManager(void) {
   /* HistoManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__LibHistoManagerDictLN_HistoManager));
   G__memfunc_setup("HistoManager",1218,G__LibHistoManagerDict_590_0_1, 105, G__get_linked_tagnum(&G__LibHistoManagerDictLN_HistoManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInstance",1141,G__LibHistoManagerDict_590_0_2, 85, G__get_linked_tagnum(&G__LibHistoManagerDictLN_HistoManager), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (HistoManager* (*)())(&HistoManager::getInstance) ), 0);
   G__memfunc_setup("CreateHistTables",1607,G__LibHistoManagerDict_590_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "creates all the histograms in the TClonesArray", (void*) NULL, 0);
   G__memfunc_setup("StoreHistos",1159,G__LibHistoManagerDict_590_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "saves all the histograms in the TClonesArray ", (void*) NULL, 0);
   G__memfunc_setup("GetHistoTH1F",1082,G__LibHistoManagerDict_590_0_5, 85, G__get_linked_tagnum(&G__LibHistoManagerDictLN_TH1F), -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistoTH2F",1083,G__LibHistoManagerDict_590_0_6, 85, G__get_linked_tagnum(&G__LibHistoManagerDictLN_TH2F), -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistoTH3F",1084,G__LibHistoManagerDict_590_0_7, 85, G__get_linked_tagnum(&G__LibHistoManagerDictLN_TH3F), -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHistoTProf",1298,G__LibHistoManagerDict_590_0_8, 85, G__get_linked_tagnum(&G__LibHistoManagerDictLN_TProfile), -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTH1F",572,G__LibHistoManagerDict_590_0_9, 121, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - - 0 - bins f - - 0 - xlow "
"f - - 0 - xhigh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTH1F",572,G__LibHistoManagerDict_590_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - - 0 - bins D - - 10 - xbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTH2F",573,G__LibHistoManagerDict_590_0_11, 121, -1, -1, 0, 8, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - - 0 - bins1 f - - 0 - xlow1 "
"f - - 0 - xhigh1 i - - 0 - bins2 "
"f - - 0 - xlow2 f - - 0 - xhigh2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTProf",788,G__LibHistoManagerDict_590_0_12, 121, -1, -1, 0, 7, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - - 0 - bins f - - 0 - xlow1 "
"f - - 0 - xhigh1 f - - 0 '0.' xlow2 "
"f - - 0 '1.' xhigh2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTH2F",573,G__LibHistoManagerDict_590_0_13, 121, -1, -1, 0, 6, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - - 0 - binsx D - - 10 - xbins "
"i - - 0 - binsy D - - 10 - ybins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTH3F",574,G__LibHistoManagerDict_590_0_14, 121, -1, -1, 0, 11, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - - 0 - bins1 f - - 0 - xlow1 "
"f - - 0 - xhigh1 i - - 0 - bins2 "
"f - - 0 - xlow2 f - - 0 - xhigh2 "
"i - - 0 - bins3 f - - 0 - xlow3 "
"f - - 0 - xhigh3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTH3F",574,G__LibHistoManagerDict_590_0_15, 121, -1, -1, 0, 8, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - - 0 - binsx D - - 10 - xbins "
"i - - 0 - binsy D - - 10 - ybins "
"i - - 0 - binsz D - - 10 - zbins", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__LibHistoManagerDict_590_0_16, 85, G__get_linked_tagnum(&G__LibHistoManagerDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HistoManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__LibHistoManagerDict_590_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HistoManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__LibHistoManagerDict_590_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HistoManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__LibHistoManagerDict_590_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HistoManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__LibHistoManagerDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__LibHistoManagerDict_590_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__LibHistoManagerDict_590_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HistoManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__LibHistoManagerDict_590_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HistoManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__LibHistoManagerDict_590_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HistoManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__LibHistoManagerDict_590_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HistoManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HistoManager", 1218, G__LibHistoManagerDict_590_0_28, (int) ('i'), G__get_linked_tagnum(&G__LibHistoManagerDictLN_HistoManager), -1, 0, 1, 1, 1, 0, "u 'HistoManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HistoManager", 1344, G__LibHistoManagerDict_590_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__LibHistoManagerDict_590_0_30, (int) ('u'), G__get_linked_tagnum(&G__LibHistoManagerDictLN_HistoManager), -1, 1, 1, 1, 1, 0, "u 'HistoManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncLibHistoManagerDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalLibHistoManagerDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcLibHistoManagerDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__LibHistoManagerDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_TH3F = { "TH3F" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_HistoManager = { "HistoManager" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_vectorlEHistDefTH1FcOallocatorlEHistDefTH1FgRsPgR = { "vector<HistDefTH1F,allocator<HistDefTH1F> >" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTH1FcOallocatorlEHistDefTH1FgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HistDefTH1F,allocator<HistDefTH1F> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_vectorlEHistDefTH2FcOallocatorlEHistDefTH2FgRsPgR = { "vector<HistDefTH2F,allocator<HistDefTH2F> >" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTH2FcOallocatorlEHistDefTH2FgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HistDefTH2F,allocator<HistDefTH2F> >::iterator>" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_vectorlEHistDefTProfcOallocatorlEHistDefTProfgRsPgR = { "vector<HistDefTProf,allocator<HistDefTProf> >" , 99 , -1 };
G__linked_taginfo G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTProfcOallocatorlEHistDefTProfgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HistDefTProf,allocator<HistDefTProf> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableLibHistoManagerDict() {
  G__LibHistoManagerDictLN_TClass.tagnum = -1 ;
  G__LibHistoManagerDictLN_TBuffer.tagnum = -1 ;
  G__LibHistoManagerDictLN_TMemberInspector.tagnum = -1 ;
  G__LibHistoManagerDictLN_TObject.tagnum = -1 ;
  G__LibHistoManagerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LibHistoManagerDictLN_TClonesArray.tagnum = -1 ;
  G__LibHistoManagerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__LibHistoManagerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LibHistoManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__LibHistoManagerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__LibHistoManagerDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__LibHistoManagerDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__LibHistoManagerDictLN_TH1F.tagnum = -1 ;
  G__LibHistoManagerDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__LibHistoManagerDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__LibHistoManagerDictLN_TProfile.tagnum = -1 ;
  G__LibHistoManagerDictLN_TH2F.tagnum = -1 ;
  G__LibHistoManagerDictLN_TH3F.tagnum = -1 ;
  G__LibHistoManagerDictLN_HistoManager.tagnum = -1 ;
  G__LibHistoManagerDictLN_vectorlEHistDefTH1FcOallocatorlEHistDefTH1FgRsPgR.tagnum = -1 ;
  G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTH1FcOallocatorlEHistDefTH1FgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LibHistoManagerDictLN_vectorlEHistDefTH2FcOallocatorlEHistDefTH2FgRsPgR.tagnum = -1 ;
  G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTH2FcOallocatorlEHistDefTH2FgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__LibHistoManagerDictLN_vectorlEHistDefTProfcOallocatorlEHistDefTProfgRsPgR.tagnum = -1 ;
  G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTProfcOallocatorlEHistDefTProfgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableLibHistoManagerDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_TProfile);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_TH3F);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_HistoManager),sizeof(HistoManager),-1,292096,"End of CLASS  HistoManager",G__setup_memvarHistoManager,G__setup_memfuncHistoManager);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_vectorlEHistDefTH1FcOallocatorlEHistDefTH1FgRsPgR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTH1FcOallocatorlEHistDefTH1FgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_vectorlEHistDefTH2FcOallocatorlEHistDefTH2FgRsPgR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTH2FcOallocatorlEHistDefTH2FgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_vectorlEHistDefTProfcOallocatorlEHistDefTProfgRsPgR);
   G__get_linked_tagnum_fwd(&G__LibHistoManagerDictLN_reverse_iteratorlEvectorlEHistDefTProfcOallocatorlEHistDefTProfgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupLibHistoManagerDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupLibHistoManagerDict()");
  G__set_cpp_environmentLibHistoManagerDict();
  G__cpp_setup_tagtableLibHistoManagerDict();

  G__cpp_setup_inheritanceLibHistoManagerDict();

  G__cpp_setup_typetableLibHistoManagerDict();

  G__cpp_setup_memvarLibHistoManagerDict();

  G__cpp_setup_memfuncLibHistoManagerDict();
  G__cpp_setup_globalLibHistoManagerDict();
  G__cpp_setup_funcLibHistoManagerDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncLibHistoManagerDict();
  return;
}
class G__cpp_setup_initLibHistoManagerDict {
  public:
    G__cpp_setup_initLibHistoManagerDict() { G__add_setup_func("LibHistoManagerDict",(G__incsetup)(&G__cpp_setupLibHistoManagerDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initLibHistoManagerDict() { G__remove_setup_func("LibHistoManagerDict"); }
};
G__cpp_setup_initLibHistoManagerDict G__cpp_setup_initializerLibHistoManagerDict;

